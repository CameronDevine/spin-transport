TITLE: The *spin-transport* documentation
AUTHOR: Rico A.R. Picone {copyright|CC BY} Email:rpicone@stmartin.edu at Department of Mechanical Engineering, Saint Martin's University
DATE: today

__Summary.__
The *spin-transport* software ("GitHub": "https://github.com/ricopicone/spin-transport") is for the dynamic simulation of bulk spin transport---diffusion and separation---in solid media.
The project is open-source and still in development.

TOC: on


!split
# ======= Installation =======
# label{section:installation}

======= spin-transport: introduction =======

This repository contains the (developing) open-source code for simulating bulk spin transport---diffusion and separation---in solid media. Multi-spin-species and magnetic resonance simulations are in development.

This is a "Python": "https://www.python.org/" and "FEniCS": "https://fenicsproject.org/" project. FEniCS is used to numerically solve the spin transport governing partial differential equations.

End users of this project write Python code to interface with FEniCS.

===== Installation =====

One must first have a working installation of FEniCS.
This README assumes the use of "Docker": "https://www.docker.com/" for installation, which is documented "here": "http://fenics.readthedocs.io/projects/containers/en/latest/".

Then "clone": "https://help.github.com/articles/cloning-a-repository/" this repository to the host machine.

===== Workflow =====

The FEniCS docs have a section on "workflow": "http://fenics.readthedocs.io/projects/containers/en/latest/work_flows.html".
There are many ways to instantiate these good practices, but if you're using a \*nix system, the following may be the easiest.

With the cloned `spin-transport` repository as your working directory, create a link in your path to _spin-transport_'s `fenics` executable bash script.

!bc shcod
ln fenics /usr/local/bin
!ec

Now a FEniCS Python script `foo.py` can be started with the command `fenics foo.py` _from the host_ instead of manually starting it from a Docker container.
This has several advantages, including that there is no need to move scripts into the container and that the complicated syntax need not be remembered.

===== Testing the installation =====

To verify that everything is installed correctly, run the Poisson equation demo `ft01_poisson.py` ("source": "https://fenicsproject.org/pub/tutorial/html/._ftut1004.html") in your container.

If you installed the `fenics` bash script per the instructions above, you can use the following command (working directory: `spin-transport`).

!bc shcod
$ fenics ft01_poisson.py
!ec

If everything is working fine, the output should look something like the following.

!bc shcod
$ fenics ft01_poisson.py
Calling DOLFIN just-in-time (JIT) compiler, this may take some time.
--- Instant: compiling ---
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Solving linear variational problem.
*** Warning: Degree of exact solution may be inadequate for accurate 
	result in errornorm.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
  Ignoring precision in integral metadata compiled using quadrature 
  representation. Not implemented.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
error_L2  = 0.00823509807335
error_max = 1.33226762955e-15
!ec

The directory `spin-transport/poisson` should have been created and should contain two files: `solution.pvd` and `solution000000.vtu`.
These files contain the solution data.

===== Acknowledgement =====

This work is supported by a grant from the Army Research Office, Materials Science Division under grant proposal _Nanoscale Spin Hyperpolarization and Imaging_
with PI "John Marohn, PhD": "http://marohn.chem.cornell.edu/".

===== Contributors =====

This project stems from a collaboration among three institutions:

* "Cornell University": "http://www.cornell.edu/",
* "Saint Martin's University": "https://www.stmartin.edu/", and the
* "University of Washington": "http://www.washington.edu/".

The lead contributor to this project is "Rico Picone, PhD": "http://ricopic.one" of Saint Martin's University, co-PI on the ARO grant.
Other contributors include "John Marohn, PhD": "http://marohn.chem.cornell.edu/" (Cornell, PI), John A. Sidles, PhD (Washington), Joseph L. Garbini, PhD (Washington), and Corinne Isaac (Cornell).

======= Short theoretical introduction =======
label{section:shorttheory}

The simulation is based on the two spin-species transport equations presented by Picone cite{Picone2014b}.
These equations present the transport---diffusion and separation---of three conserved quantities represented by the vector-valued function $\bm{\rho}$ of time and a single spatial dimension, taken to be the direction of a background magnetic field $B$ we call *longitudinal*.
The three conserved quantities are represented in the ``polarization thermodynamic covector basis'' $e$ by the components cite{Picone2014b}

* $\rho_1$: a dimensionless dipole-energy density,
* $\rho_2$: longitudinal nuclear polarization, and
* $\rho_3$: longitudinal electron polarization.

Several parameters require definition and are summarized in the following list (note that a ``\textasciitilde{}'' over a function denotes that it is a function of the dimensionless spatial coordinate). 
See cite{Picone2014b} for details.

* $B_d$: maximum dipole-dipole magnetic field.
* $\gamma_2$, $\gamma_3$: gyromagnetic ratio for nuclei and electrons, respectively.
* $\overline{\gamma}$: dimensionless ratio $\gamma_3/\gamma_2$.
* $\Gamma_2$, $\Gamma_3$: transport coefficients for nuclear and electron polarization, respectively.
* $\overline{\Gamma}$: dimensionless ratio $\Gamma_3/\Gamma_2$.
* $\Delta_2$, $\Delta_3$: constant spin densities in solid medium for nuclei and electrons, respectively.
* $\overline{\Delta}$: dimensionless ratio $\Delta_3/\Delta_2$.
* $\overline{r}$: dimensionless spatial coordinate $(\partial_r B(r)|_{r=0}/B_d) r$.
* $\overline{t}$: dimensionless time $\Gamma_2 (\partial_r B(r)|_{r=0}/B_d)^2 t$.
* $\overline{B}$: ratio of magnetic fields $\partial_{\overline{r}} \tilde{B}/B_d$.
* $\overline{c}$: ratio of ratios $\overline{B} (1+\overline{\Delta})/(1+\overline{\gamma}\overline{\Delta})$.

__two-species magnetization transport equations.__
The preferred form of the continuity equation is in the polarization basis with the dimensionless spatial coordinate and time variable, which we call the *two-species magnetization transport equations*:

!bt
\begin{align} 
	\partial_{\tbar} \rho_1 
	&=
	-\frac{\cratio^2}{1+\Deltar}
	\left(
		\left(
			1 - \rho_2^2
		\right)
		+
		\Gammar\Deltar\overline{\gamma}^2
		\left(
			1 - \rho_3^2
		\right)
	\right)
	\arctanh\rho_1 + 
	\nonumber\\
	&-\frac{\cratio}{1+\Deltar}
	\left(
		\partial_{\rbar} \rho_2 - \Gammar\Deltar\overline{\gamma} \partial_{\rbar} \rho_3
	\right)
	+ ( 1 + \Gammar )\, \partial_{\overline{r}}^2 \rho_1
	\label{eq:transport1} \\
	%
	\partial_{\tbar} \rho_2 
	&=
	\partial_{\rbar}
	\left(
		\cratio
		\left( 1 - \rho_2^2 \right)
		\arctanh\rho_1
	\right)
	+ \partial_{\overline{r}}^2 \rho_2
	\label{eq:transport2} \\
	\partial_{\tbar} \rho_3
	&=
	- 
	\Gammar\overline{\gamma}
	\partial_{\rbar}
	\left(
		\cratio
		\left( 1 - \rho_3^2 \right)
		\arctanh\rho_1
	\right)
	+ \Gammar \partial_{\overline{r}}^2 \rho_3 .
	\label{eq:transport3}
\end{align}
!et

Bloch equation dynamics for a each species and $T_1 \gg T_2$ can be approximated without the transverse dynamics as cite{Picone2010,Grivet1993}

!bt
\begin{align}
	\partial_{\overline{t}} \rho_2 &= \frac{\rho_{20}}{\overline{T}_{1p}} - \frac{\rho_2}{\overline{\tau}_p} \\
	\partial_{\overline{t}} \rho_3 &= \frac{\rho_{30}}{\overline{T}_{1e}} - \frac{\rho_3}{\overline{\tau}_e}.
\end{align}
!et

where, for each species,

!bt
\begin{align}
	\overline{\tau} = \frac{1}{\frac{1}{\overline{T}_1} + \frac{\overline{T}_2 \omega_1^2}{1+\overline{T}_2^2 \tilde{\delta}^2}}
\end{align}
!et

where it is important to use dimensionless time constants and where we define (again, for each species)

!bt
\begin{align}
	\omega_1 &= -\gamma B_1 \quad \text{and} \quad
	\tilde{\delta} = \gamma B_d \overline{r}.
\end{align}
!et

The Block equation dynamics can be combined with the transport dynamics of Equations \ref{eq:transport1} -- \ref{eq:transport3} such that the *two-species Block-transport* equations can be written



!bt
\begin{align} 
	\partial_{\tbar} \rho_1 
	&=
	-\frac{\cratio^2}{1+\Deltar}
	\left(
		\left(
			1 - \rho_2^2
		\right)
		+
		\Gammar\Deltar\overline{\gamma}^2
		\left(
			1 - \rho_3^2
		\right)
	\right)
	\arctanh\rho_1 + 
	\nonumber\\
	&-\frac{\cratio}{1+\Deltar}
	\left(
		\partial_{\rbar} \rho_2 - \Gammar\Deltar\overline{\gamma} \partial_{\rbar} \rho_3
	\right)
	+ ( 1 + \Gammar )\, \partial_{\overline{r}}^2 \rho_1
	\label{eq:btransport1} \\
	%
	\partial_{\tbar} \rho_2 
	&=
	\partial_{\rbar}
	\left(
		\cratio
		\left( 1 - \rho_2^2 \right)
		\arctanh\rho_1
	\right)
	+ \partial_{\overline{r}}^2 \rho_2
	+ \frac{\rho_{20}}{\overline{T}_{1p}} 
	- \frac{\rho_2}{\overline{\tau}_p}
	\label{eq:btransport2} \\
	\partial_{\tbar} \rho_3
	&=
	- 
	\Gammar\overline{\gamma}
	\partial_{\rbar}
	\left(
		\cratio
		\left( 1 - \rho_3^2 \right)
		\arctanh\rho_1
	\right)
	+ \Gammar \partial_{\overline{r}}^2 \rho_3
	+ \frac{\rho_{30}}{\overline{T}_{1e}} 
	- \frac{\rho_3}{\overline{\tau}_e} .
	\label{eq:btransport3}
\end{align}
!et

======= References =======

BIBFILE: papers.pub
